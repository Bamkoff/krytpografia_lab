# Zaimplementuj algorytm, który dekoduje punkt krzywej eliptycznej.
# Dane:PM= (x, y)∈E(Fp)E= [A, B, p]
# Wynik: M wiadomość - zdekodowany punkt P


def decode_message(x_pm, y_pm, mi):
    return (x_pm - 1) // mi


print(decode_message(580220802208022080220802208022080220802208022080219,
                     9073418834038701972974485272739499098286050603297679806468444940659981011995679246912306,
                     47
      ))
# N =  1027830955020116731747064446587679577800250538838890543987037169018282124510787255037623
# mi =  30
# Pm = ( 370352 , 14417356443933993270897911104214664176305625947425928443216873599828501207760759429427154 )

# N =  463225436362891706482874774080750893452021371884832343553242098493508206433474957734684
# mi =  47
# Pm = ( 580220802208022080220802208022080220802208022080219 , 9073418834038701972974485272739499098286050603297679806468444940659981011995679246912306 )
# Pm = ( 580220802208022080220802208022080220802208022080219, 9073418834038701972974485272739499098286050603297679806468444940659981011995679246912306 )