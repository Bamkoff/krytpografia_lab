# Zaimplementuj algorytm (funkcję), który sprawdza czy punkt należy do krzywej.
# Dane:P= (x, y) oraz A, B, p= 3 (mod 4) takie, że E:Y2=X3+AX+B jest krzywą nad Fp
# Wynik: True jeśli P= (x, y) ∈ E(Fp) w przeciwnym przypadku False


def effective_power(b, k, n):
    y = 1
    binary = list(reversed(bin(k)[2:]))
    i = len(binary) - 1
    while i >= 0:
        y = (y ** 2) % n
        if binary[i] == "1":
            y = (y * b) % n
        i = i - 1
    return y


def check_if_point_belongs_to_curve(x, y, A, B, p):
    if effective_power(y, 2, p) == (effective_power(x, 3, p) + A * x + B) % p:
        return True
    else:
        return False


print(check_if_point_belongs_to_curve(5, 1, 6, 0, 11))
print(check_if_point_belongs_to_curve(7, 1, 6, 0, 11))

print(check_if_point_belongs_to_curve(285113634279465403319996581740169338329454608669814309137990174814243655992779447106132850,
                                      598700530906084162596261101440667782569915319623798143751082061599951188013331503150304328,
                                      239614427021073265587611886177902927263167863041565491257781227550405368115731464059190159,
                                      447169285435982716467332439542997876345372330045685811964291613238129105735899852114277221,
                                      1183779584357076950937981497685946292711107412152534481102525547387604378262522402526266939))
print(check_if_point_belongs_to_curve(4322852864292450883203364587638804068804788639901058319910112280924216491426608224936556695,
                                      407101967359352391007212949557767251244837608140520929046874035754244254501609034757630075,
                                      7442266114772415030352768976382998406784551432504978717073346489409078922166036576925346586,
                                      2466337352720946163558594566878067703721357412568959556793569239002025886656197224980680579,
                                      7514235270718539427405383888290348979319584377272418465308674358123575315551817468363473339))